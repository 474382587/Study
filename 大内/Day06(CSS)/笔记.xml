1. 渐变
2. 文本格式化
3. 表格的属性
4. 浮动
===========================================================================
1. 渐变
    1. 什么是渐变
        两种或多种颜色间平滑过渡的效果  
        分类：
            1. 线性渐变
            2. 径向渐变
            3. 重复渐变
    2. 渐变的组成（元素）
        色标：决定了渐变的每种颜色及其出现的位置
        每一种渐变效果都是由多个 色标 组成的（两个及以上）
    3. 渐变的语法
        1. 语法
            属性：background-image
            值：
                linear-gradient()：线性渐变
                radial-gradient()：径向渐变
                repeating-linear-gradient()：重复线性渐变
                repeating-radial-gradient()：重复径向渐变
        2. 线性渐变
            语法：
                background-image：linear-gradient(angle,color-point,color-point,...);
            angle: 方向或角度-即渐变的填充方向
                值：  
                    关键字：
                        to top: 从下向上填充
                        to right: 从左向右填充
                        to bottom: 从上向下填充
                        to left：从右向左填充 
                    角度：0deg ~ 360deg
                        0deg ： to top
                        90deg: to right
                        180deg: to bottom
                        270deg: to left
            color-point：色标，表示每个颜色的值，及其出现的位置，多个色标之间用逗号（，）分隔
                ex：
                    1. red 0% 百分比
                        开始的时候是 红色
                    2. blue 50px 像素值
                        填充到第50像素时，变为 蓝色
                    3. 色标的位置可以省略
                        省略位置后，每个渐变颜色将平均分配元素区域
        3. 径向渐变
            语法：
                background-image：radial-gradient(size at position,color-point,color-point,...);
                size at position: 指定 径向渐变的半径 和 圆心位置
                size: 圆的半径，px为单位
                position：圆心位置
                    1. 0px 0px 像素值
                        将圆心设置在元素的左上角
                    2. 50% 50% 百分比
                        将圆心设置在元素的正中间位置处
                    3. right bottom
                        将圆心设置在元素的右下角
                    关键字：top/right/bottom/left/center
        4. 浏览器的兼容性
            各主流浏览器的主流版本 均支持渐变效果
            对于不支持简便的浏览器，可以尝试增加 浏览器前缀 去实现渐变的显示
            浏览器前缀：
                Firefox： -moz-
                Chrome和Safari：-webkit-
                Opera: -o-
            前缀的加载位置：
                1. 如果浏览器不支持属性的话，则将前缀加载到属性名称前
                    ex:
                        animation:scroll 5s;

                        -moz-animation:scroll 5s;
                        -webkit-animation:scroll 5s;
                        -o-animation:scroll 5s;
                2. 如果浏览器支持属性但是不支持值的话，则将前缀加载到属性值的前面
                    ex:
                        background-image:linear-gradient();
                        background-image:-moz-linear-gradient();
                        background-image:-o-linear-gradient();
                        background-image:-webkit-linear-gradient();
2. 文本格式化
    1. 字体属性
        1. 指定字体系列
            属性：font-family
            取值：value1,value2,vale3...
            注意：
                字体取值包含 中文或特殊符号，使用 "" 引起来
            ex:
                font-family: "宋体","微软雅黑",Arial;
        2. 字体大小
            属性：font-size
            取值：px 或 pt 或 em
            ex:
                font-size:24px;
        3. 字体加粗
            属性：font-weight
            取值：
                1. normal：正常体
                2. bold：粗体
                3. 400~900 整百
                    400：normal
                    900：bold
        4. 字体的样式
            属性：font-style
            取值:
                1. normal：正常体
                2. italic: 斜体
        5. 小型大写字母
            作用：针对英文字符，把小写字符变成大写字符，但是大小与小写一样
            属性: font-variant
            取值：
                1. normal：正常体
                2. small-caps: 小型大写字母
        6. 字体属性
            属性：font
            取值：style variant weight size family
            注意：使用简写属性时，一定要设置 family 属性的值，否则无效
                ex:
                    font:12px; 无效！
                    font：12px "微软雅黑"; ok
    2. 文本属性
        1. 文本的颜色
            属性：color
            取值：任意合法颜色
        2. 文本排列方式
            作用：指定当前元素中的文本，行内元素，行内块元素的 水平对齐方式
            属性：text-align
            取值：left/right/center
        3. 文字修饰
            作用：指定文本的线条样式
            属性：text-decoration
            取值：
                1. none
                    没有线条显示
                2. underline
                    下划线 <u></u>
                3. overline 
                    上划线
                4. line-through
                    删除线 <s></s>
        4. 行高
            作用：指定元素中一行数据的高度。如果行高的高度高于文字高度本身，那么该行文本将在行高的范围内呈现出 垂直居中 的显示效果
            使用场合：
                1. 控制一行文本垂直居中对齐
                2. 设置行间距
            属性：line-height
            取值：以px为单位的数值
        5. 首行文本缩进
            属性：text-indent 
            取值：缩进的距离，以px为单位的数值
        6. 文本的阴影
            属性：text-shadow 
            取值：h-shadow v-shadow blur color;
3. 表格
    1. 表格的常用属性
        1. 内边距属性： padding
            注意：没有 margin 属性
        2. 尺寸属性： width，height
        3. 文本格式化属性： font-* text-align, color, text-indent
        4. 背景属性：背景色，背景图，渐变
        5. border属性：表格和单元格的border不是同一个
        6. vertical-align
            作用：在单元格中，设置文本的垂直方式
            取值：top/middle/bottom
    2. 表格的特有属性
        1. 边框合并（HTML里是cellspacing = 0；但是实际上是重叠了）
            模拟html的合并效果：table - >border-right:0; border-bottom:0; td -> border-top:0;border-left:0;  
            属性：border-collapse 
            取值： 
                1. separate
                    默认值，即 分离边框模式
                2. collapase
                    边框合并效果
        2. 边框边距
            作用：单元格之间的距离，相当于td之间的margin
            属性：border-spacing 
            取值： 
                1. 指定一个值
                    表示单元格之间水平和垂直间距是相同的
                2. 指定两个值
                    第一个值：单元格之间的水平间距
                    第二个值：单元格之间的垂直间距
                注意：
                    仅限于边框分类状态使用，即 border-collapse:separate;
                3. 标题位置
                    属性：caption-side
                    取值： 
                        1. top：默认值，标题显示在表格之上
                        2. bottom：标题显示在表格之下
                4. 显示规则
                    作用：指定表格的布局方式
                    默认布局方式为 自动表格布局，即 单元格宽度实际上是由内容决定的，与设定的值无关
                    属性：table-layout
                    取值： 
                        1. auto
                            默认值，即自动表格布局
                        2. fixed
                            固定表格布局，即单元格的宽度由设定的值为主，而不取决于内容
                    自动表格布局 VS 固定表格布局
                    1. 自动表格布局
                        1. 单元格大小会适应内容大小
                        2. 缺点：表格复杂的时候，加载速度慢
                        3. 适用场合：适用于不确定每列大小的情况下使用
                        4. 虽然算法较慢，但是能体现传统表格特点
                    2. 固定表格布局
                        1. 单元格大小取决于td中设置的值
                        2. 优点： 加载速度较快
                        3. 确定每列大小事，可以使用固定表格布局
                        4. 算法较快，缺点是不够灵活