1. 浮动
    1. 定位概述
        所谓的定位，实际上就是定义元素框相对于其正常位置，应该出现在的位置在哪。简单的说，定位就是改变元素在页面上的默认位置
    2. 定位分类
        1. 普通流定位（元素默认定位方式）
        2. 浮动定位
        3. 相对定位
        4. 绝对定位
        5. 固定定位
    3. 普通流定位
        普通流定位，又称为 “文档流定位”，是页面元素的默认定位方式
            - 页面中的块级元素按照从上到下的方式排列，而且每个元素独占一行
            - 页面中的行内元素按照从左到右的方式排列，当前行显示不下所有行内元素时，会自动换行
            
        问题：如何能够让多个块级元素在一行内显示呢？
            -- 浮动定位，浮动定位专门解决块级元素在一行内显示的问题
    4. 浮动定位
        1. 浮动定位概述
            如果将元素的定位方式设置为浮动定位，那么将具备以下几个特点：
            1. 浮动元素会被排除在文档流之外 即脱离文档流，元素不再占据页面空间，其他未浮动元素要上前补位
            2. 浮动元素会停靠在父元素的左边或右边，或停靠在其他已浮动元素的边缘上
            3. 浮动元素只会在当前行内浮动
            4. 浮动元素依然位于父元素之内
            5. 浮动定位处理的问题：让多个块级元素在一行内显示
        2. 语法
            属性：float
            取值：
                1. none
                    默认值，即 无浮动定位效果
                2. left
                    左浮动，让元素停靠在父元素的左边，或停靠在左侧已有元素的边缘上
                3. right
                    右浮动，让元素停靠在父元素的右边，或停靠在右侧已有元素的边缘上
        3. 浮动引发的特殊效果
            1. 当父元素的宽度显示不下所有的已浮动子元素时，最后一个将换行（有可能被卡住）
            2. 元素一旦浮动起来之后，那么宽度将变成自适应（非人为指定情况下）
            3. 元素一旦浮动起来之后，将变成块级元素，尤其对行内元素影响最大
                块级元素：允许修改 尺寸
                行内：不允许修改 尺寸
            4. 文本，行内元素，行内块元素时采用环绕的方式排列的，是不会被浮动元素压在底下的，会巧妙地避开浮动元素
        4. 清除浮动
            元素浮动起来之后，除了影响自己的位置之外，还会影响后续元素
            如果后续元素不想被前面浮动元素所影响的话，可以使用清除浮动的效果来解决影响（谁被影响在谁的里面加）
            属性：clear
            取值：
                1. none
                    默认值，即 不做任何清除操作
                2. left
                    左清除，清除当前元素前面元素的左浮动带来的影响
                    即 当前元素不会上前占位，并且左边不允许有浮动元素
                3. right 
                    右清除，清除当前元素前面元素的右浮动带来的影响
                    即 当前元素不会上前占位，并且右边不允许有浮动元素
                4. both
                    左右两边全清除，清除当前元素前面元素的左浮动和右浮动带来的影响
                    即 当前元素不会上前占位，并且左右两边不允许有浮动元素
        5. 浮动元素对父元素带来的影响
            由于浮动元素会脱离文档流，所以会导致元素不占据父元素的页面空间，所以会对父元素高度带来影响。如果一个元素中所有的子元素全部都浮动了，那么该元素的高度就是0
            解决方案：
                1. 直接设置父元素高度
                    弊端：必须要知道父元素的准确高度  
                2. 设置父元素也浮动
                    弊端：对后续元素会有影响
                3. 为父元素设置 overflow，取值为 hidden 或 auto
                    弊端：如果有子集内容要溢出显示的话，也一同被隐藏了
                4. 父元素中追加空子元素，并设置其clear属性为both
2. 显示
    1. 显示方式
        1. 作用
            显示方式 决定了元素在页面中如何摆放定位
        2. 语法
            属性：display
            取值：
                1. none
                    没有显示，即 让生成的元素不显示 - 隐藏
                    特点：脱离文档流，即不占据页面空间
                2. block 
                    让元素变得和块级元素一样
                3. inline
                    让元素变得和行内元素一样
                4， inline-block
                    让元素变得和行内块元素一样
                    多个元素在一行显示，允许修改尺寸
    2. 显示效果
        1. visibility 属性
            作用：控制元素的可见性（显示/隐藏）
            属性：visibility
            取值：
                1. visible
                    默认值，可见的
                2. hidden
                    隐藏元素，但依然占据页面空间
                3. collapse
                    使用在表格元素上，删除一行或一列时，不影响表格整体布局
            注意：display: none; 和 visibility: hidden; 的区别
                1. display: none;
                    脱离文档流，所以隐藏后不占据页面空间
                2. visibility：hidden;
                    隐藏元素，但并不脱离文档流，导致空间依然占据
        2. opacity 属性
            作用：改变元素的透明度
            属性：opacity
            取值：0.0（完全透明） ~ 1.0（完全不透明）
        3. vertical-align 属性
            属性：vertical-align
            取值：top/middle/bottom/baseline(默认，基线对齐)
            作用：
                1. 设置单元格内容的垂直对齐方式
                2. 为行内块元素设置vertical align，相当于设置 该元素两端的文本相对于该元素的垂直对齐方式
                3. 设置图片两端的文本相对于图片的垂直对齐方式           
    3. 光标
        属性：cursor
        取值： 
            1. default
                默认
            2. pointer
                小手
            3. crosshair
                +
            4. text 
                I
            5. wait
                等待
            6. help
                帮助：?
3. 列表
    1. 列表标识属性
        属性：list-style-type
        取值：
            1. none
                无标记
            2. disc
                实心圆
            3. circle
                空心圆
            4. square
                实心方块
    2. 列表项图像
        作用：由自定义图像作为显示的标识
        属性：list-style-image
        取值：url(图像路径)
    3. 列表项位置
        列表项的默认位置是在 列表项内容区域之外，列表的内边距范围内
        属性：list-style-position
        取值：
            1. outside：默认值，列表项标识位置在列表项之外
            2. inside：将列表项标识放在列表项区域之内
    4. 列表属性
        属性：list-style 
        取值：type url() position;
            常用方式：
                list-style: none;
    5. 列表的适用场合
        列表能够使用在 纵向排列 和横向排列 的元素中
4. 定位
    1. 定位属性
        1. position 属性
            作用：指定元素的定位类型
            属性：position
            取值：
                1. static：默认值
                2. relative：相对定位
                3. absolute：绝对定位
                4. fixed：固定定位
        2. 偏移属性
            作用：改变元素在页面中的位置（移动元素）
            属性：
                1. top
                2. bottom
                3. left
                4. right
            取值：偏移距离，以px为单位的数值
                top 取值为负，上移，为正，下移
                bottom 取值为正，上移，为负，下移
                right 取值为负，右移，为正，左移
                left 取值为负，左移，为正，右移
        3. 堆叠顺序
            作用：在元素出现堆叠效果时，改变他们的顺序
            属性：z-index
            取值：没有单位的数字，值越大，越靠上
            注意：
                1. z-index 只能作用在 relative/absolute/fixed 定位的元素上
                2. 如果不指定z-index，则是后来者居上
                3. 父子关系（层级关系）的元素不能使用z-index修改堆叠顺序，永远是子级元素压在父级元素上

    2. 定位方式
        1. 相对定位
            1. 什么是相对定位
                元素会相对于它原来的位置偏移某个距离
                相对定位元素原本所占的空间会被保留
            2. 语法
                语法：position：relative;
                配合着便宜属性 top/bottom/left/right实现元素的移动
            3. 使用场合
                1. 实现元素位置微调时使用
        2. 绝对定位
            1. 什么是绝对定位
                1. 绝对定位的元素会脱离文档流 - 不占据页面空间
                2. 绝对定位的元素会相对与它最近的已定位的祖先元素实现位置的初始化
                    如果元素没有已定位的祖先元素，那么元素就会相对与最初的包含块实现位置的初始化，如body，html
                    已定位：absolute/relative/fixed 称之为已定位元素
                    祖先元素：无限父级元素
            2. 语法：position：absolute;
                配合着 偏移属性 实现位置的改变
            3. 特殊效果
                1. 绝对定位元素会变成块级元素
                2. 绝对定位元素依然可以使用margin，正常情况下，auto会失效
        3. 固定定位
            1. 作用：
                将元素固定在页面的某个位置处，不会随着滚动条变化而发生变化
            2， 语法 
                position：fixed;
                配合着偏移属性实现位置的定位
            3. 注意：
                1. 固定定位元素脱离文档流
                2. 固定定位元素会变成块级元素
                3. 固定定位元素永远是相对于body实现位置摆放
        4. 各种定位的适用场合
            1. 浮动
                多个块级元素想在一行内显示时，用浮动
            2. 相对定位
                元素想要实现自身位置微调时，用相对定位
            3. 绝对定位 
                实现弹出内容时，用绝对定位，配合着父级元素做相对定位一起完成
            4. 固定定位
                顶部固定，边栏（广告），使用固定定位